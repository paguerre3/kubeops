apiVersion: apps/v1
# k8s config file type
kind: Deployment
metadata:
  # deployment name
  name: mongoexpress-deployment
  # service selector matches with depl. label
  labels:
    app: mongoexpress
spec:
  replicas: 1
  selector: 
    # depl. selector label matches with template/pod label 
    matchLabels:
      app: mongoexpress
  # blue print of the Pod
  template:
    metadata:
      labels:
        app: mongoexpress
    spec:
      containers:
      - name: mongoexpress
        image: mongo-express
        # it matches with Service targetPort
        ports:
        - containerPort: 8081
        # environmnt variables section.
        # user and password shouldn't be expossed directly in yamel,
        # so a Secret is created 1st to reference
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom:
            configMapKeyRef:
              name: mongodb-configmap
              key: database_url
---
apiVersion: v1
kind: Service
metadata:
  # deployment name
  name: mongoexpress-service
spec:
  selector: 
    # service selector matches with deployment label
    app: mongoexpress
  # LoadBalancer type makes the "External"Service as it assigns an external IP for accepting external requests. 
  # This is a bad name because "Internal"Service also loads and balances requests 
  type: LoadBalancer
  # port is the exposed port used for receiving request from other service/pods
  # targetPort is the one that matches with pod/containerPort.
  # nodePort is the one used in the "external" IP but it only has a "valid range" of assignment, i.e. 30000-32767 
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30000